@model MyersAssignment1.Models.Payroll

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Calculate</title>
</head>
<body>
    <a href="~/home/index">Home</a>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Payroll</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PayRate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PayRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PayRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.MaritalStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })*@
                    @Html.DropDownListFor(model => model.MaritalStatus, Model.MaritalList,"--Select--")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dependents, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Dependents, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dependents, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.GrossPay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Model.GrossPay
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Taxes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Model.Taxes
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NetPay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Model.NetPay
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Calculate" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</body>
</html>
